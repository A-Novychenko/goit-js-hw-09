{"mappings":"YAAA,IAAMA,EAAOC,SAASC,cAAc,SAEhCC,EAAU,KAEdH,EAAKI,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBAEF,IAEmBC,EAAfF,EAAEG,cADJC,SAAYC,EAAiBH,EAAjBI,MAAmBC,EAAeL,EAAfM,KAAiBC,EAAmBP,EAAnBQ,OAG5CC,EAAQC,OAAOP,EAAWQ,OAC1BL,EAAOI,OAAOL,EAAUM,OACxBH,EAASE,OAAOH,EAAYI,OAG9BC,EAAaH,EAEjBb,EAAUiB,aACR,SAACC,EAAUV,GAETQ,GAAcN,EAmBX,IAAIS,SAAQ,SAACC,EAASC,GACLC,KAAKC,Q,IAjBtBC,MAAK,SAAAC,G,IAAGC,EAAQD,EAARP,SAAUS,EAAKF,EAALjB,MACjBoB,QAAQC,IAAI,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M,IAE3DI,OAAM,SAAAN,G,IAAGC,EAAQD,EAARP,SAAUS,EAAKF,EAALjB,MAClBoB,QAAQC,IAAI,sBAAuCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M,MAG/DX,EAhBa,EAkBbH,GAGFmB,YAAW,W,OAAMC,cAAcjC,E,GAAUa,EAAQH,EAAOE,E","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\n\nlet timerId = null;\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  const {\n    elements: { delay: delayInput, step: stepInput, amount: amountInput },\n  } = e.currentTarget;\n\n  const delay = Number(delayInput.value);\n  const step = Number(stepInput.value);\n  const amount = Number(amountInput.value);\n\n  let position = 0;\n  let delayCount = delay;\n\n  timerId = setInterval(\n    (position, delay) => {\n      position += 1;\n      delayCount += step;\n\n      createPromise(position, delay)\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    },\n    delayCount,\n    position,\n    delay\n  );\n\n  setTimeout(() => clearInterval(timerId), delay + step * amount);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    (position, delay) => {\n      if (shouldResolve) {\n        resolve({\n          position,\n          delay,\n        });\n      } else {\n        reject({\n          position,\n          delay,\n        });\n      }\n    };\n  });\n}\n\n// makePromise\n// const makePromise = () => {\n//   return new Promise((resolve, reject) => {\n//     const passed = Math.random() > 0.5;\n\n//     setTimeout(() => {\n//       if (passed) {\n//         resolve('✅ Куку это resolve');\n//       }\n\n//       reject('❌ все пропало это reject');\n//     }, 2000);\n//   });\n// };\n\n// makePromise()\n//   .then(result => console.log(result))\n//   .catch(error => console.log(error));\n"],"names":["$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$timerId","addEventListener","e","preventDefault","_elements","currentTarget","elements","delayInput","delay","stepInput","step","amountInput","amount","delay1","Number","value","delayCount","setInterval","position","Promise","resolve","reject","Math","random","then","param","_$position","_$delay","console","log","concat","catch","setTimeout","clearInterval"],"version":3,"file":"03-promises.a328459c.js.map"}