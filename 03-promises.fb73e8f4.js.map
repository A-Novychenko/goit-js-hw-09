{"mappings":"YAAA,IAAMA,EAAOC,SAASC,cAAc,SAEhCC,EAAW,EAEfH,EAAKI,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBAEF,IAEmBC,EAAfF,EAAEG,cADJC,SAAYC,EAAiBH,EAAjBI,MAAmBC,EAAeL,EAAfM,KAAiBC,EAAmBP,EAAnBQ,OAG9CC,EAAQC,OAAOP,EAAWQ,OACxBL,EAAOI,OAAOL,EAAUM,OACxBH,EAASE,OAAOH,EAAYI,OAKlCC,YAAW,WACT,IAAMC,EAAUC,aAAY,WA4BhC,IAAuBC,EAAUX,GAAVW,EA3BjBnB,GAAY,EA2BeQ,EAzBHK,EA0BrB,IAAIO,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,GAGpCH,EAAQ,CACNI,SAAAN,EACAX,UAGFc,EAAO,CACLG,SAAAN,EACAX,S,KApCCkB,MAAK,SAAAC,G,IAAGC,EAAQD,EAARF,SAAUjB,EAAKmB,EAALnB,MACjBqB,QAAQC,IAAI,uBAAwCC,OAAfH,EAAS,QAAYG,OAANvB,EAAM,M,IAE3DwB,OAAM,SAAAL,G,IAAGM,EAAQN,EAARF,SAAUjB,EAAKmB,EAALnB,MAClBqB,QAAQC,IAAI,sBAAuCC,OAAfE,EAAS,QAAYF,OAANvB,EAAM,M,IAG7DK,GAASH,EAELE,IAAWZ,GACbkC,cAAcjB,E,GAEfP,E,GACFG,E","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\n\nlet position = 0;\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  const {\n    elements: { delay: delayInput, step: stepInput, amount: amountInput },\n  } = e.currentTarget;\n\n  let delay = Number(delayInput.value);\n  const step = Number(stepInput.value);\n  const amount = Number(amountInput.value);\n  // const startDelay = Math.abs(delay - step);\n\n  ///////\n\n  setTimeout(() => {\n    const timerID = setInterval(() => {\n      position += 1;\n\n      createPromise(position, delay)\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n\n      delay += step;\n\n      if (amount === position) {\n        clearInterval(timerID);\n      }\n    }, step);\n  }, delay);\n\n  // createPromise(position, delay)\n  //   .then(({ position, delay }) => {\n  //     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  //   })\n  //   .catch(({ position, delay }) => {\n  //     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  //   });\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n      resolve({\n        position,\n        delay,\n      });\n    } else {\n      reject({\n        position,\n        delay,\n      });\n    }\n  });\n}\n"],"names":["$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$position","addEventListener","e","preventDefault","_elements","currentTarget","elements","delayInput","delay","stepInput","step","amountInput","amount","delay1","Number","value","setTimeout","timerID","setInterval","position3","Promise","resolve","reject","Math","random","position","then","param","position1","console","log","concat","catch","position2","clearInterval"],"version":3,"file":"03-promises.fb73e8f4.js.map"}